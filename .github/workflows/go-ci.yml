name: Go CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
    check_quality:
        name: check quality
        runs-on: ubuntu-latest
        strategy:
          matrix:
              go-version: ['1.21.8', '1.22.1']
        steps:
          - uses: actions/checkout@v4
          - name: Setup Go ${{ matrix.go-version }}
            uses: actions/setup-go@v4
            with:
                go-version: ${{ matrix.go-version }}

          - name: Display Go version
            run: go version
          - name: Install dependencies
            run: go get .
          - name: Test with Go CLI
            run: go test -v ./...
          - name: GolangCI-Lint
            uses: golangci/golangci-lint-action@v2
            with:
              version: v1.57.2
              working-directory: .
          - name: Go Vet
            run: go vet ./...
    build-docker-image:
        name: Build Docker Image
        needs: check_quality
        runs-on: ubuntu-latest
        outputs:
          image_tag: ${{ steps.meta.outputs.tags }}  For CD Propose
        steps:
            - uses: actions/checkout@v4
            - name: Setup Go ${{ matrix.go-version }}
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Setup SHA
              run: echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV

            - name: Build the Docker image
              run: docker build . --file Dockerfile --tag ghcr.io/hanqqv/fun-exercise-api:${{ env.GITHUB_SHA }}

            - name: Login ghcr.io
              uses: docker/login-action@v1.8.0
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
                logout: true

            - name: Push to GitHub Container Registry
              uses: docker/build-push-action@v2
              with:
                context: .
                tags: |
                    ghcr.io/hanqqv/fun-exercise-api:${{ env.GITHUB_SHA }}
                # build on feature branches, push only on main branch
                push: ${{ github.ref == 'refs/heads/main' }}

            - name: Image digest
              run: echo ${{ steps.docker_build.outputs.digest }}
